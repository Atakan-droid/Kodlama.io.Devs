// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Contexts;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseName");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8178143-015a-4a2e-a028-57fd827c72eb"),
                            CourseName = "C#",
                            CreatedAt = new DateTime(2022, 9, 4, 12, 21, 18, 434, DateTimeKind.Local).AddTicks(8408),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(2022, 10, 4, 12, 21, 18, 434, DateTimeKind.Local).AddTicks(8425),
                            IsDeleted = false,
                            Price = 250.0,
                            StartDate = new DateTime(2022, 9, 8, 12, 21, 18, 434, DateTimeKind.Local).AddTicks(8418),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4ec068d7-bd75-4287-8645-abb410393999"),
                            CourseName = "Java",
                            CreatedAt = new DateTime(2022, 9, 4, 12, 21, 18, 434, DateTimeKind.Local).AddTicks(8427),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(2022, 9, 14, 12, 21, 18, 434, DateTimeKind.Local).AddTicks(8428),
                            IsDeleted = false,
                            Price = 1000.0,
                            StartDate = new DateTime(2022, 9, 7, 12, 21, 18, 434, DateTimeKind.Local).AddTicks(8428),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
